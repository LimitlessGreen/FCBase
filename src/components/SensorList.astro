---
/**
 * Sensor list component
 * Displays sensors as badges with optional links and instance counts
 * Provides consistent styling across all pages
 */
import StatusBadge from '@/components/ui/StatusBadge.astro';
import { getBasePath } from '@/lib/paths';
import type { DefaultVariant } from '@/lib/badge-styles';
import ResourceLinkList, { type ResourceLink } from '@/components/ResourceLinkList.astro';

interface Sensor {
  id: string;
  name: string;
  instances?: number;
  links?: ResourceLink[];
}

interface Props {
  sensors: Sensor[];
  /** Whether to render as links to sensor detail pages */
  linkable?: boolean;
  /** Badge size */
  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';
  /** Additional class names */
  class?: string;
}

const { sensors, linkable = true, size = 'sm', class: className } = Astro.props;
const basePath = getBasePath();
const sensorBadgeStatus: DefaultVariant = 'info';
---

{sensors.length > 0 && (
  <div class={`flex flex-wrap gap-3 ${className || ''}`}>
    {sensors.map((sensor) => {
      const displayText = sensor.instances && sensor.instances > 1
        ? `${sensor.name} Ã—${sensor.instances}`
        : sensor.name;

      return (
        <div class="flex items-center gap-2" data-sensor-id={sensor.id} key={sensor.id}>
          {linkable ? (
            <a
              href={`${basePath}/sensors/${sensor.id}`}
              class="inline-flex transition-transform hover:scale-105"
            >
              <StatusBadge variant="default" status={sensorBadgeStatus} size={size}>
                {displayText}
              </StatusBadge>
            </a>
          ) : (
            <StatusBadge variant="default" status={sensorBadgeStatus} size={size}>
              {displayText}
            </StatusBadge>
          )}

          {Array.isArray(sensor.links) && sensor.links.length > 0 && (
            <ResourceLinkList links={sensor.links} size="xs" class="gap-1.5" />
          )}
        </div>
      );
    })}
  </div>
)}

{sensors.length === 0 && (
  <span class="text-xs text-muted-foreground italic">None</span>
)}
