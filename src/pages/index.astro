---
import { getCollection, getEntry } from 'astro:content';
import MainLayout from "@/layouts/MainLayout.astro";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/Card";
import { Button } from "@/components/ui/Button";
import { GITHUB_REPO_URL } from "@/lib/constants";
import ControllerCard from "@/components/cards/ControllerCard.astro";

const title = "FCBase – Open Flight Controller Database";
const description = "Search and compare ArduPilot, PX4, and iNAV flight controllers plus EdgeTX transmitters – open, community-driven.";

// Load actual controllers from content collection
const allControllers = await getCollection('controllers');

// Auto-import any local images placed in src/assets/images/controllers
const localControllerImages = import.meta.glob('/src/assets/images/controllers/*.{jpg,jpeg,png,webp,avif}', { eager: true, query: '?url', import: 'default' });
const localImageMap = Object.fromEntries(
  Object.entries(localControllerImages).map(([p, url]) => {
    const file = p.split('/').pop();
    const id = file.replace(/\.(jpg|jpeg|png|webp|avif)$/i, '');
    return [id, url];
  })
);
const resolveLocalPreview = (id) => {
  const plain = id.includes('/') ? id.split('/').pop() : id;
  const url = localImageMap[plain];
  if (!url) return undefined;
  const base = (import.meta.env.BASE_URL || '').replace(/\/$/, '');
  return base ? `${base}${url}` : url;
};

// Remote preview images for highlighted controllers
const controllerPreviewImages: Record<string, { src: string; credit: string; sourceUrl?: string }> = {
  'aocoda-h743dual': {
    src: 'https://ardupilot.org/copter/_images/aocoda_h743dual.jpg',
    credit: 'ArduPilot Documentation',
    sourceUrl: 'https://ardupilot.org/copter/docs/common-aocoda-h743dual.html',
  },
  'cuav-7-nano': {
    src: 'https://ardupilot.org/copter/_images/7-nano.jpg',
    credit: 'ArduPilot Documentation',
    sourceUrl: 'https://ardupilot.org/copter/docs/common-CUAV-7-Nano.html',
  },
  'cuav-nora': {
    src: 'https://ardupilot.org/copter/_images/nora.png',
    credit: 'ArduPilot Documentation',
    sourceUrl: 'https://ardupilot.org/copter/docs/common-cuav-nora-overview.html',
  },
  'cuav-pixhawk-v6x': {
    src: 'https://ardupilot.org/copter/_images/cuav-pixhawk-v6x.jpg',
    credit: 'ArduPilot Documentation',
    sourceUrl: 'https://raw.githubusercontent.com/ArduPilot/ardupilot_wiki/master/common/source/docs/common-cuav-pixhawkv6X.rst',
  },
  'cubepilot-cube-black': {
    src: 'https://ardupilot.org/copter/_images/pixhawk2-overhead.jpg',
    credit: 'ArduPilot Documentation',
    sourceUrl: 'https://ardupilot.org/copter/docs/common-thecube-overview.html',
  },
  'cubepilot-cube-orange-plus': {
    src: 'https://ardupilot.org/copter/_images/Cube_orange_module.jpg',
    credit: 'ArduPilot Documentation',
    sourceUrl: 'https://ardupilot.org/copter/docs/common-thecubeorange-overview.html',
  },
  'holybro-pixhawk-6x': {
    src: resolveLocalPreview('holybro-pixhawk-6x') ?? 'https://holybro.com/cdn/shop/files/110321_4.jpg?v=1750816088',
    credit: 'Holybro Store',
    sourceUrl: 'https://holybro.com/products/pixhawk-6x',
  },
};

// First 6 controllers for grid preview
const controllers = await Promise.all(
  allControllers.slice(0, 6).map(async (controller) => {
    const preview = controllerPreviewImages[controller.id];
    const manufacturer = controller.data.brand
      ? await getEntry('manufacturers', controller.data.brand)
      : null;

    return {
      id: controller.id,
      title: controller.data.title,
      manufacturer: manufacturer?.data.name || manufacturer?.data.title || controller.data.brand,
      mcu: controller.data.mcu,
      mounting: controller.data.mounting,
      uarts: controller.data.io.uarts,
      can: controller.data.io.can,
      pwm: controller.data.io.pwm,
      sdCard: controller.data.io.sd_card,
      barometer: (controller.data.sensors?.barometer?.length ?? 0) > 0,
      firmwares: controller.data.firmware_support.map((fw) => fw.id),
      image: preview ? {
        src: preview.src,
        credit: preview.credit,
        sourceUrl: preview.sourceUrl,
      } : undefined,
    };
  })
);

const features = [
  {
    title: "Comprehensive Database",
    description: "Access detailed specifications for hundreds of flight controllers from major manufacturers.",
    icon: "database",
  },
  {
    title: "Multi-Firmware Support",
    description: "Compare boards compatible with ArduPilot, PX4, and iNAV firmware platforms.",
    icon: "layers",
  },
  {
    title: "Open Source",
    description: "Community-driven with open data under CC-BY 4.0. Contribute and help grow the database.",
    icon: "github",
  },
];

const basePath = import.meta.env.BASE_URL.replace(/\/$/, '');
---

<MainLayout title={title} description={description} editPath="src/pages/index.astro">
  <!-- Hero Section -->
  <section class="w-full bg-gradient-to-b from-background to-muted/20">
    <div class="container py-12 md:py-16 lg:py-24">
      <div class="flex flex-col items-center text-center gap-4 md:gap-6 max-w-3xl mx-auto">
        <div class="inline-flex items-center gap-2 rounded-full border px-3 py-1.5 md:px-4 md:py-2 text-xs md:text-sm">
          <span class="font-medium text-primary">Open Hardware Index</span>
        </div>
        <h1 class="text-3xl font-bold tracking-tight sm:text-4xl md:text-5xl lg:text-6xl xl:text-7xl">
          FCBase
        </h1>
        <p class="text-base md:text-lg lg:text-xl text-muted-foreground max-w-2xl">
          The open hardware knowledge base for the ArduPilot, PX4, and iNAV ecosystems. Discover flight controllers, EdgeTX transmitters, compare specifications, and plan your next build.
        </p>
        <div class="flex flex-col sm:flex-row flex-wrap gap-3 md:gap-4 justify-center mt-2 md:mt-4 w-full sm:w-auto">
          <Button size="lg" asChild client:load class="w-full sm:w-auto">
            <a href={`${basePath}/controllers`}>Browse Controllers</a>
          </Button>
          <Button variant="outline" size="lg" asChild client:load class="w-full sm:w-auto">
            <a href={`${basePath}/transmitters`}>Browse Transmitters</a>
          </Button>
          <Button variant="outline" size="lg" asChild client:load class="w-full sm:w-auto">
            <a href={`${basePath}/contribute`}>Contribute</a>
          </Button>
        </div>
      </div>
    </div>
  </section>

  <!-- Features Section -->
  <section class="w-full py-12 md:py-16 lg:py-24">
    <div class="container">
      <div class="grid gap-6 md:gap-8 sm:grid-cols-2 lg:grid-cols-3">
        {features.map((feature) => (
          <Card key={feature.title} client:load>
            <CardHeader>
              <CardTitle>{feature.title}</CardTitle>
              <CardDescription>{feature.description}</CardDescription>
            </CardHeader>
          </Card>
        ))}
      </div>
    </div>
  </section>

  <!-- Category Section -->
  <section class="w-full bg-muted/40 py-12 md:py-16 lg:py-24">
    <div class="container">
      <div class="flex flex-col gap-6 md:gap-8 max-w-4xl mx-auto">
        <div class="flex flex-col gap-2 md:gap-3 text-center">
          <h2 class="text-2xl md:text-3xl font-bold tracking-tight lg:text-4xl">
            What are you looking for?
          </h2>
          <p class="text-base md:text-lg text-muted-foreground">
            FCBase is expanding beyond flight controllers. Choose a category to explore detailed hardware data.
          </p>
        </div>

        <div class="grid gap-4 sm:grid-cols-2">
          <a href={`${basePath}/controllers`} class="group">
            <Card client:load class="h-full transition-colors group-hover:border-primary">
              <CardHeader>
                <CardTitle class="text-xl">Flight Controllers</CardTitle>
                <CardDescription>
                  Browse verified boards, compare MCUs, and filter by firmware support.
                </CardDescription>
              </CardHeader>
              <CardContent>
                <Button variant="outline" class="w-full" client:load>
                  Browse flight controllers
                </Button>
              </CardContent>
            </Card>
          </a>
          <a href={`${basePath}/transmitters`} class="group">
            <Card client:load class="h-full transition-colors group-hover:border-primary">
              <CardHeader>
                <CardTitle class="text-xl">Transmitters</CardTitle>
                <CardDescription>
                  Explore EdgeTX radios, track support versions, and jump to FCC compliance records.
                </CardDescription>
              </CardHeader>
              <CardContent>
                <Button variant="outline" class="w-full" client:load>
                  Browse transmitters
                </Button>
              </CardContent>
            </Card>
          </a>
        </div>
      </div>
    </div>
  </section>

  <!-- Controllers Grid -->
  <section class="w-full py-12 md:py-16 lg:py-24">
    <div class="container">
      <div class="grid gap-6 md:gap-8 sm:grid-cols-2 lg:grid-cols-3">
        {controllers.map((controller) => (
          <ControllerCard
            key={controller.id}
            id={controller.id}
            title={controller.title}
            manufacturer={controller.manufacturer}
            mcu={controller.mcu}
            mounting={controller.mounting}
            uarts={controller.uarts}
            can={controller.can}
            pwm={controller.pwm}
            sdCard={controller.sdCard}
            barometer={controller.barometer}
            firmwares={controller.firmwares}
            image={controller.image}
            basePath={basePath}
          />
        ))}
      </div>
    </div>
  </section>

  <!-- CTA Section -->
  <section class="w-full bg-primary text-primary-foreground py-12 md:py-16 lg:py-24">
    <div class="container">
      <div class="flex flex-col items-center text-center gap-4 md:gap-6 max-w-3xl mx-auto">
        <h2 class="text-2xl md:text-3xl font-bold tracking-tight lg:text-4xl">
          Ready to contribute?
        </h2>
        <p class="text-base md:text-lg opacity-90">
          Help us build the most comprehensive flight controller database. Add new boards, update specifications, or improve documentation.
        </p>
        <div class="flex flex-col sm:flex-row flex-wrap gap-3 md:gap-4 justify-center mt-2 md:mt-4 w-full sm:w-auto px-4">
          <Button variant="secondary" size="lg" asChild client:load class="w-full sm:w-auto">
            <a href={GITHUB_REPO_URL}>View on GitHub</a>
          </Button>
          <Button variant="outline" size="lg" asChild client:load class="w-full sm:w-auto bg-primary-foreground/10 hover:bg-primary-foreground/20 text-primary-foreground border-primary-foreground/20">
            <a href={`${basePath}/docs`}>Read Documentation</a>
          </Button>
        </div>
      </div>
    </div>
  </section>
</MainLayout>

