---
import { getCollection, getEntry } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';
import MainLayout from '@/layouts/MainLayout.astro';
import { ControllerSearch } from '@/components/ui/ControllerSearch';
import ControllerCard from '@/components/cards/ControllerCard.astro';
import { resolveControllerPreviewImage } from '@/lib/controller-images';

// Load all controllers
const allControllers = await getCollection('controllers');

// Fetch manufacturer names
const controllersWithMeta = await Promise.all(
  allControllers.map(async (controller) => {
    const manufacturer = controller.data.brand
      ? await getEntry('manufacturers', controller.data.brand)
      : null;

    return {
      ...controller,
      manufacturerName: manufacturer?.data.name || manufacturer?.data.title || controller.data.brand,
      preview: resolveControllerPreviewImage(controller) ?? null,
    };
  })
);

// Prepare data for search component
const searchControllers = controllersWithMeta.map((controller) => ({
  id: controller.id,
  title: controller.data.title,
  brand: controller.data.brand,
  mcu: controller.data.mcu,
  mounting: controller.data.mounting,
  firmware: controller.data.firmware_support.map((fw) => fw.id),
  uarts: controller.data.io.uarts,
  can: controller.data.io.can || 0,
  pwm: controller.data.io.pwm || 0,
  sdCard: controller.data.io.sd_card,
  ethernet: controller.data.io.ethernet,
  barometer: (controller.data.sensors?.barometer?.length ?? 0) > 0,
  redundant: controller.data.power?.redundant,
  image: controller.preview ?? undefined,
}));

// Sort by title
controllersWithMeta.sort((a, b) => a.data.title.localeCompare(b.data.title));

const basePath = import.meta.env.BASE_URL.replace(/\/$/, '');
---

<BaseLayout
  title="Flight Controllers - FCBase"
  description="Browse all flight controllers in the FCBase database. Compare specs, firmware support, and find the perfect board for your project."
>
  <MainLayout editPath="src/pages/controllers/index.astro">
    <div class="container py-8">
      <!-- Header -->
      <div class="mb-8">
        <nav class="mb-4 flex items-center gap-2 text-sm text-muted-foreground">
          <a href={`${basePath}/`} class="hover:text-foreground transition-colors">Home</a>
          <span>/</span>
          <span class="text-foreground">Controllers</span>
        </nav>
        
        <h1 class="text-4xl font-bold tracking-tight mb-3">Flight Controllers</h1>
        <p class="text-lg text-muted-foreground">
          Browse {controllersWithMeta.length} flight controllers from various manufacturers
        </p>
      </div>

      <!-- Search -->
      <div class="mb-12 space-y-4">
        <div class="flex flex-col gap-2 text-center">
          <h2 class="text-2xl font-semibold tracking-tight md:text-3xl">Find your flight controller</h2>
          <p class="text-base text-muted-foreground md:text-lg">
            Search by name, MCU, form factor, or supported firmware to narrow down the perfect board.
          </p>
        </div>
        <ControllerSearch client:load controllers={searchControllers} basePath={basePath} />
      </div>

      <!-- SSR Controllers Grid (rendered server-side so thumbnails are available even if client JS fails) -->
      <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3 mb-12">
        {controllersWithMeta.map((controller) => (
          <ControllerCard
            key={controller.id}
            id={controller.id}
            title={controller.data.title}
            manufacturer={controller.manufacturerName}
            mcu={controller.data.mcu}
            mounting={controller.data.mounting}
            uarts={controller.data.io.uarts}
            can={controller.data.io.can}
            pwm={controller.data.io.pwm}
            sdCard={controller.data.io.sd_card}
            barometer={(controller.data.sensors?.barometer?.length ?? 0) > 0}
            firmwares={controller.data.firmware_support.map((fw) => fw.id)}
            image={controller.preview}
            basePath={basePath}
          />
        ))}
      </div>
    </div>
  </MainLayout>
</BaseLayout>
