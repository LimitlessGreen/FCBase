---
import { getCollection } from 'astro:content';
import { Tabs, TabsList, TabsTrigger, TabsContent } from '@/components/ui/Tabs';
import MainLayout from '@/layouts/MainLayout.astro';
import { getBasePath } from '@/lib/paths';
import { LayoutGrid, Rows3 } from 'lucide-react';
import ControllerSection from './_sections.astro';
import { getComponentCardBuilders } from '@/lib/component-registry';

const controllers = await getCollection('controllers');
const manufacturers = await getCollection('manufacturers');

const manufacturerMap = new Map(manufacturers.map((entry) => [entry.id, entry]));

const controllerCardBuilders = getComponentCardBuilders('controller');
const createControllerCardModel = controllerCardBuilders?.createModel;

const controllerGroups = (
  await Promise.all(
    manufacturers.map(async (manufacturer) => {
      const manufacturerControllers = controllers
        .filter((controller) => controller.data.brand === manufacturer.id)
        .sort((a, b) => a.data.title.localeCompare(b.data.title));

      const controllerModels = createControllerCardModel
        ? await Promise.all(
            manufacturerControllers.map((controller) =>
              createControllerCardModel(controller, { manufacturersMap: manufacturerMap })
            )
          )
        : [];

      return {
        manufacturer,
        controllers: controllerModels,
      };
    })
  )
)
  .filter((group) => group.controllers.length > 0)
  .sort((a, b) => a.manufacturer.data.name.localeCompare(b.manufacturer.data.name));

const unassignedControllers = createControllerCardModel
  ? await Promise.all(
      controllers
        .filter((controller) => !manufacturerMap.has(controller.data.brand))
        .sort((a, b) => a.data.title.localeCompare(b.data.title))
        .map((controller) =>
          createControllerCardModel(controller, { manufacturersMap: manufacturerMap })
        )
    )
  : [];

const totalControllers = controllers.length;
const basePath = getBasePath();
---

<MainLayout
  title="Flight Controllers - FCBase"
  description="Browse all flight controllers in the FCBase database. Compare specs, firmware support, and find the perfect board for your project."
  editPath="src/pages/controllers/index.astro"
>
    <div class="container py-8">
      <!-- Header -->
      <nav class="mb-4 flex items-center gap-2 text-sm text-muted-foreground">
        <a href={`${basePath}/`} class="hover:text-foreground transition-colors">Home</a>
        <span>/</span>
        <span class="text-foreground">Controllers</span>
      </nav>

      <Tabs client:load defaultValue="grid" className="space-y-10">
        <div class="flex flex-col gap-4 sm:flex-row sm:items-start sm:justify-between">
          <div class="space-y-3">
            <h1 class="text-4xl font-bold tracking-tight">Flight Controllers</h1>
            <p class="text-lg text-muted-foreground">
              Explore {totalControllers} flight controllers organised by manufacturer.
            </p>
          </div>
          <div class="flex flex-col gap-2 sm:items-end">
            <span
              id="view-mode-label"
              class="text-xs font-semibold uppercase tracking-wide text-muted-foreground"
            >
              View mode
            </span>
            <TabsList
              aria-labelledby="view-mode-label"
              className="grid w-full max-w-[320px] grid-cols-2 gap-1 rounded-full bg-muted/70 p-1 sm:w-auto"
            >
              <TabsTrigger
                value="grid"
                className="flex h-10 items-center justify-center gap-2 px-3 text-sm font-medium"
              >
                <LayoutGrid className="h-4 w-4" aria-hidden="true" />
                <span class="hidden sm:inline">Grid view</span>
                <span class="sm:hidden">Grid</span>
              </TabsTrigger>
              <TabsTrigger
                value="compact"
                className="flex h-10 items-center justify-center gap-2 px-3 text-sm font-medium"
              >
                <Rows3 className="h-4 w-4" aria-hidden="true" />
                <span class="hidden sm:inline">Compact view</span>
                <span class="sm:hidden">Compact</span>
              </TabsTrigger>
            </TabsList>
          </div>
        </div>

        <TabsContent value="grid" className="mt-0">
          <div class="space-y-12">
            {controllerGroups.map((group) => (
              <ControllerSection
                group={{
                  type: 'manufacturer',
                  manufacturer: group.manufacturer,
                  controllers: group.controllers,
                }}
                basePath={basePath}
                variant="grid"
              />
            ))}

            {unassignedControllers.length > 0 && (
              <ControllerSection
                group={{ type: 'unassigned', controllers: unassignedControllers }}
                basePath={basePath}
                variant="grid"
              />
            )}
          </div>
        </TabsContent>

        <TabsContent value="compact" className="mt-0">
          <div class="space-y-12">
            {controllerGroups.map((group) => (
              <ControllerSection
                group={{
                  type: 'manufacturer',
                  manufacturer: group.manufacturer,
                  controllers: group.controllers,
                }}
                basePath={basePath}
                variant="compact"
              />
            ))}

            {unassignedControllers.length > 0 && (
              <ControllerSection
                group={{ type: 'unassigned', controllers: unassignedControllers }}
                basePath={basePath}
                variant="compact"
              />
            )}
          </div>
        </TabsContent>
      </Tabs>
    </div>
</MainLayout>
